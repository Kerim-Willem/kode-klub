{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery } from '@material-ui/core';\nimport { Grid, Avatar, IconButton } from '@material-ui/core';\nimport SectionHeader from '../../utils/SectionHeader';\nimport SectionAlternate from '../../theme/SectionAlternate';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  teamAvatar: {\n    width: 250,\n    height: 250,\n    border: `${theme.spacing(1)}px solid white`,\n    boxShadow: '0 2px 10px 0 rgba(23,70,161,.11)',\n    marginTop: theme.spacing(-2),\n    [theme.breakpoints.down('md')]: {\n      marginTop: theme.spacing(1)\n    }\n  },\n  listGrid: {\n    overflow: 'hidden',\n    marginBottom: theme.spacing(1),\n    '&:last-child': {\n      marginBottom: theme.spacing(0)\n    }\n  },\n  GridView: {\n    marginBottom: '1rem'\n  }\n}));\n\nconst Team = props => {\n  const {\n    data,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"data\", \"className\"]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n  return __jsx(SectionAlternate, null, __jsx(\"div\", _extends({\n    className: clsx(classes.root, className)\n  }, rest), __jsx(SectionHeader, {\n    title: __jsx(\"span\", null, \"KodeKlub Team\"),\n    fadeUp: true\n  }), __jsx(\"br\", null), __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: isMd ? 0 : 3\n  }, data.map((item, index) => __jsx(Grid, {\n    key: index,\n    item: true,\n    subtitle: item.description,\n    container: true,\n    alignItems: \"center\",\n    direction: \"column\",\n    xs: 12,\n    sm: 6,\n    md: 4\n  }, __jsx(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    sm: 7,\n    md: 12,\n    alignItems: \"center\"\n  }, __jsx(SectionHeader, {\n    label: item.authorName,\n    titleVariant: \"h5\",\n    title: item.title\n  }), __jsx(Grid, {\n    item: true,\n    container: true,\n    justify: \"center\"\n  }, __jsx(Avatar, _extends({}, item.authorPhoto, {\n    alt: item.authorName,\n    className: classes.teamAvatar\n  }))), __jsx(SectionHeader, {\n    title: \"\",\n    className: classes.GridView,\n    subtitle: item.description,\n    ctaGroup: [__jsx(IconButton, {\n      href: item.github,\n      variant: \"outlined\",\n      color: \"secondary\"\n    }, __jsx(GitHubIcon, null)), __jsx(IconButton, {\n      href: item.facebook,\n      variant: \"outlined\",\n      color: \"secondary\"\n    }, __jsx(FacebookIcon, null)), __jsx(IconButton, {\n      href: item.linkedin,\n      variant: \"outlined\",\n      color: \"secondary\"\n    }, __jsx(LinkedInIcon, null))],\n    disableGutter: true\n  })))))));\n};\n\nexport default Team;","map":null,"metadata":{},"sourceType":"module"}