{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/kerimfathallah/Desktop/kode-klub/src/components/ContactBarButton/ContactBarButton.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Drawer, Button } from '@material-ui/core';\nimport ContactForm from '../ContactForm';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { i18n, withTranslation } from '../../i18n';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      height: '100%',\n      width: '100%'\n    },\n    buttonContained: {\n      color: 'white',\n      display: 'flex',\n      fontFamily: 'Roboto',\n      fontWeight: '300'\n    },\n    contactForm: {\n      padding: theme.spacing(3, 2),\n      maxWidth: 800,\n      margin: '0 auto'\n    }\n  };\n}); // export default function ContactBarButton() {\n// \tconst classes = useStyles();\n// \tconst [openBottombar, setOpenBottombar] = React.useState(false);\n// \tconst handleBottombarOpen = () => {\n// \t\tsetOpenBottombar(true);\n// \t};\n// \tconst handleBottombarClose = () => {\n// \t\tsetOpenBottombar(false);\n// \t};\n// \treturn (\n// \t\t<div>\n// \t\t\t<Button\n// \t\t\t\tclassName={classes.buttonContained}\n// \t\t\t\tonClick={handleBottombarOpen}\n// \t\t\t\tsize=\"large\"\n// \t\t\t\tvariant=\"contained\"\n// \t\t\t\tcolor=\"secondary\">\n// \t\t\t\tContact Us\n// \t\t\t</Button>\n// \t\t\t<Drawer\n// \t\t\t\tanchor=\"bottom\"\n// \t\t\t\topen={openBottombar}\n// \t\t\t\tonClose={handleBottombarClose}>\n// \t\t\t\t<div className={classes.contactForm}>\n// \t\t\t\t\t<ContactForm />\n// \t\t\t\t</div>\n// \t\t\t</Drawer>\n// \t\t</div>\n// \t);\n// }\n\nvar ContactBarButton = function ContactBarButton(_ref) {\n  _s();\n\n  var t = _ref.t;\n  var classes = useStyles();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      openBottombar = _React$useState2[0],\n      setOpenBottombar = _React$useState2[1];\n\n  var handleBottombarOpen = function handleBottombarOpen() {\n    setOpenBottombar(true);\n  };\n\n  var handleBottombarClose = function handleBottombarClose() {\n    setOpenBottombar(false);\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 3\n    }\n  }, __jsx(Button, {\n    className: classes.buttonContained,\n    onClick: handleBottombarOpen,\n    size: \"large\",\n    variant: \"contained\",\n    color: \"secondary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }\n  }, t('contactbutton')), __jsx(Drawer, {\n    anchor: \"bottom\",\n    open: openBottombar,\n    onClose: handleBottombarClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }\n  }, __jsx(\"div\", {\n    className: classes.contactForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, __jsx(ContactForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 6\n    }\n  }))));\n};\n\n_s(ContactBarButton, \"ffxyXifxhAL2ghtfdLETWnSsL+k=\", false, function () {\n  return [useStyles];\n});\n\n_c = ContactBarButton;\nContactBarButton.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", {\n            namespacesRequired: ['contactbutton']\n          });\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default withTranslation('contactbutton')(ContactBarButton);\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactBarButton\");","map":{"version":3,"sources":["/Users/kerimfathallah/Desktop/kode-klub/src/components/ContactBarButton/ContactBarButton.js"],"names":["Drawer","Button","ContactForm","makeStyles","i18n","withTranslation","useStyles","theme","root","height","width","buttonContained","color","display","fontFamily","fontWeight","contactForm","padding","spacing","maxWidth","margin","ContactBarButton","t","classes","React","useState","openBottombar","setOpenBottombar","handleBottombarOpen","handleBottombarClose","getInitialProps","namespacesRequired"],"mappings":";;;;;;;;;;AAAA,SAASA,MAAT,EAAiBC,MAAjB,QAA+B,mBAA/B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,IAAT,EAAeC,eAAf,QAAsC,YAAtC;AAEA,IAAMC,SAAS,GAAGH,UAAU,CAAC,UAACI,KAAD;AAAA,SAAY;AACxCC,IAAAA,IAAI,EAAE;AACLC,MAAAA,MAAM,EAAE,MADH;AAELC,MAAAA,KAAK,EAAE;AAFF,KADkC;AAKxCC,IAAAA,eAAe,EAAE;AAChBC,MAAAA,KAAK,EAAE,OADS;AAEhBC,MAAAA,OAAO,EAAE,MAFO;AAGhBC,MAAAA,UAAU,EAAE,QAHI;AAIhBC,MAAAA,UAAU,EAAE;AAJI,KALuB;AAWxCC,IAAAA,WAAW,EAAE;AACZC,MAAAA,OAAO,EAAEV,KAAK,CAACW,OAAN,CAAc,CAAd,EAAiB,CAAjB,CADG;AAEZC,MAAAA,QAAQ,EAAE,GAFE;AAGZC,MAAAA,MAAM,EAAE;AAHI;AAX2B,GAAZ;AAAA,CAAD,CAA5B,C,CAkBA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAW;AAAA;;AAAA,MAARC,CAAQ,QAARA,CAAQ;AACnC,MAAMC,OAAO,GAAGjB,SAAS,EAAzB;;AADmC,wBAGOkB,KAAK,CAACC,QAAN,CAAe,KAAf,CAHP;AAAA;AAAA,MAG5BC,aAH4B;AAAA,MAGbC,gBAHa;;AAKnC,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AACjCD,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA,GAFD;;AAIA,MAAME,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAClCF,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACA,GAFD;;AAIA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,MAAD;AACC,IAAA,SAAS,EAAEJ,OAAO,CAACZ,eADpB;AAEC,IAAA,OAAO,EAAEiB,mBAFV;AAGC,IAAA,IAAI,EAAC,OAHN;AAIC,IAAA,OAAO,EAAC,WAJT;AAKC,IAAA,KAAK,EAAC,WALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMEN,CAAC,CAAC,eAAD,CANH,CADD,EAUC,MAAC,MAAD;AACC,IAAA,MAAM,EAAC,QADR;AAEC,IAAA,IAAI,EAAEI,aAFP;AAGC,IAAA,OAAO,EAAEG,oBAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIC;AAAK,IAAA,SAAS,EAAEN,OAAO,CAACP,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAJD,CAVD,CADD;AAqBA,CAlCD;;GAAMK,gB;UACWf,S;;;KADXe,gB;AAoCNA,gBAAgB,CAACS,eAAjB,yEAAmC;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAa;AAC/CC,YAAAA,kBAAkB,EAAE,CAAC,eAAD;AAD2B,WAAb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnC;AAIA,eAAe1B,eAAe,CAAC,eAAD,CAAf,CAAiCgB,gBAAjC,CAAf","sourcesContent":["import { Drawer, Button } from '@material-ui/core';\nimport ContactForm from '../ContactForm';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { i18n, withTranslation } from '../../i18n';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\theight: '100%',\n\t\twidth: '100%'\n\t},\n\tbuttonContained: {\n\t\tcolor: 'white',\n\t\tdisplay: 'flex',\n\t\tfontFamily: 'Roboto',\n\t\tfontWeight: '300',\n\t},\n\tcontactForm: {\n\t\tpadding: theme.spacing(3, 2),\n\t\tmaxWidth: 800,\n\t\tmargin: '0 auto'\n\t}\n}));\n\n// export default function ContactBarButton() {\n// \tconst classes = useStyles();\n\n// \tconst [openBottombar, setOpenBottombar] = React.useState(false);\n\n// \tconst handleBottombarOpen = () => {\n// \t\tsetOpenBottombar(true);\n// \t};\n\n// \tconst handleBottombarClose = () => {\n// \t\tsetOpenBottombar(false);\n// \t};\n\n// \treturn (\n// \t\t<div>\n// \t\t\t<Button\n// \t\t\t\tclassName={classes.buttonContained}\n// \t\t\t\tonClick={handleBottombarOpen}\n// \t\t\t\tsize=\"large\"\n// \t\t\t\tvariant=\"contained\"\n// \t\t\t\tcolor=\"secondary\">\n// \t\t\t\tContact Us\n// \t\t\t</Button>\n\n// \t\t\t<Drawer\n// \t\t\t\tanchor=\"bottom\"\n// \t\t\t\topen={openBottombar}\n// \t\t\t\tonClose={handleBottombarClose}>\n// \t\t\t\t<div className={classes.contactForm}>\n// \t\t\t\t\t<ContactForm />\n// \t\t\t\t</div>\n// \t\t\t</Drawer>\n// \t\t</div>\n// \t);\n// }\n\nconst ContactBarButton = ({ t }) => {\n\tconst classes = useStyles();\n\n\tconst [openBottombar, setOpenBottombar] = React.useState(false);\n\n\tconst handleBottombarOpen = () => {\n\t\tsetOpenBottombar(true);\n\t};\n\n\tconst handleBottombarClose = () => {\n\t\tsetOpenBottombar(false);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Button\n\t\t\t\tclassName={classes.buttonContained}\n\t\t\t\tonClick={handleBottombarOpen}\n\t\t\t\tsize=\"large\"\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tcolor=\"secondary\">\n\t\t\t\t{t('contactbutton')}\n\t\t\t</Button>\n\n\t\t\t<Drawer\n\t\t\t\tanchor=\"bottom\"\n\t\t\t\topen={openBottombar}\n\t\t\t\tonClose={handleBottombarClose}>\n\t\t\t\t<div className={classes.contactForm}>\n\t\t\t\t\t<ContactForm />\n\t\t\t\t</div>\n\t\t\t</Drawer>\n\t\t</div>\n\t);\n};\n\nContactBarButton.getInitialProps = async () => ({\n\tnamespacesRequired: ['contactbutton']\n});\n\nexport default withTranslation('contactbutton')(ContactBarButton);\n"]},"metadata":{},"sourceType":"module"}