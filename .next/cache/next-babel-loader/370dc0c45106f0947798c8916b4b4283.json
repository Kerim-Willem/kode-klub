{"ast":null,"code":"var _jsxFileName = \"/Users/kerimfathallah/Desktop/kode-klub/src/utils/Image/Image.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles'; // import { LazyLoadImage } from 'react-lazy-load-image-component';\n// import 'react-lazy-load-image-component/src/effects/opacity.css';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '100%',\n    height: '100%'\n  },\n  dBlock: {\n    display: 'block'\n  }\n}));\n/**\n * Component to display the images\n *\n * @param {Object} props\n */\n\nconst Image = props => {\n  const {\n    src,\n    alt,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"src\", \"alt\", \"className\"]);\n\n  const classes = useStyles(); // if (lazy) {\n  // \treturn (\n  // \t\t<LazyLoadImage\n  // \t\t\tclassName={clsx('image', classes.root, classes.dBlock, className)}\n  // \t\t\talt={alt}\n  // \t\t\tsrc={src}\n  // \t\t\tsrcSet={srcSet}\n  // \t\t\teffect=\"opacity\"\n  // \t\t\t{...lazyProps}\n  // \t\t\t{...rest}\n  // \t\t/>\n  // \t);\n  // }\n\n  return __jsx(\"img\", _extends({\n    className: clsx('image', classes.root, className),\n    alt: alt,\n    src: src\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }\n  }));\n};\n\nImage.defaultProps = {\n  alt: '...'\n};\nImage.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * Source of the image\n   */\n  src: PropTypes.string.isRequired,\n\n  /**\n   * Image title\n   */\n  alt: PropTypes.string\n};\nexport default Image;","map":{"version":3,"sources":["/Users/kerimfathallah/Desktop/kode-klub/src/utils/Image/Image.js"],"names":["React","clsx","PropTypes","makeStyles","useStyles","root","width","height","dBlock","display","Image","props","src","alt","className","rest","classes","defaultProps","propTypes","string","isRequired"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CACA;AACA;;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAC,OAAO;AACnCE,EAAAA,IAAI,EAAE;AACLC,IAAAA,KAAK,EAAE,MADF;AAELC,IAAAA,MAAM,EAAE;AAFH,GAD6B;AAKnCC,EAAAA,MAAM,EAAE;AACPC,IAAAA,OAAO,EAAE;AADF;AAL2B,CAAP,CAAD,CAA5B;AAUA;;;;;;AAKA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACxB,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,GAAP;AAAYC,IAAAA;AAAZ,MAAmCH,KAAzC;AAAA,QAAgCI,IAAhC,4BAAyCJ,KAAzC;;AAEA,QAAMK,OAAO,GAAGZ,SAAS,EAAzB,CAHwB,CAIxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACC;AACC,IAAA,SAAS,EAAEH,IAAI,CAAC,OAAD,EAAUe,OAAO,CAACX,IAAlB,EAAwBS,SAAxB,CADhB;AAEC,IAAA,GAAG,EAAED,GAFN;AAGC,IAAA,GAAG,EAAED;AAHN,KAIKG,IAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD;AAQA,CA1BD;;AA4BAL,KAAK,CAACO,YAAN,GAAqB;AACpBJ,EAAAA,GAAG,EAAE;AADe,CAArB;AAIAH,KAAK,CAACQ,SAAN,GAAkB;AACjB;;;AAGAJ,EAAAA,SAAS,EAAEZ,SAAS,CAACiB,MAJJ;;AAKjB;;;AAGAP,EAAAA,GAAG,EAAEV,SAAS,CAACiB,MAAV,CAAiBC,UARL;;AAUjB;;;AAGAP,EAAAA,GAAG,EAAEX,SAAS,CAACiB;AAbE,CAAlB;AAgBA,eAAeT,KAAf","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { LazyLoadImage } from 'react-lazy-load-image-component';\n// import 'react-lazy-load-image-component/src/effects/opacity.css';\n\nconst useStyles = makeStyles(() => ({\n\troot: {\n\t\twidth: '100%',\n\t\theight: '100%'\n\t},\n\tdBlock: {\n\t\tdisplay: 'block'\n\t}\n}));\n\n/**\n * Component to display the images\n *\n * @param {Object} props\n */\nconst Image = (props) => {\n\tconst { src, alt, className, ...rest } = props;\n\n\tconst classes = useStyles();\n\t// if (lazy) {\n\t// \treturn (\n\t// \t\t<LazyLoadImage\n\t// \t\t\tclassName={clsx('image', classes.root, classes.dBlock, className)}\n\t// \t\t\talt={alt}\n\t// \t\t\tsrc={src}\n\t// \t\t\tsrcSet={srcSet}\n\t// \t\t\teffect=\"opacity\"\n\t// \t\t\t{...lazyProps}\n\t// \t\t\t{...rest}\n\t// \t\t/>\n\t// \t);\n\t// }\n\n\treturn (\n\t\t<img\n\t\t\tclassName={clsx('image', classes.root, className)}\n\t\t\talt={alt}\n\t\t\tsrc={src}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\nImage.defaultProps = {\n\talt: '...'\n};\n\nImage.propTypes = {\n\t/**\n\t * External classes\n\t */\n\tclassName: PropTypes.string,\n\t/**\n\t * Source of the image\n\t */\n\tsrc: PropTypes.string.isRequired,\n\n\t/**\n\t * Image title\n\t */\n\talt: PropTypes.string\n};\n\nexport default Image;\n"]},"metadata":{},"sourceType":"module"}