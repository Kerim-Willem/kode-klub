{"ast":null,"code":"var _jsxFileName = \"/Users/kerimfathallah/Desktop/kode-klub/src/theme/Section/Section.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 1200,\n    width: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(6, 2),\n    [theme.breakpoints.up('sm')]: {\n      padding: theme.spacing(12, 2)\n    }\n  },\n  fullWidth: {\n    maxWidth: '100%'\n  },\n  disablePadding: {\n    padding: 0\n  },\n  narrow: {\n    maxWidth: 800\n  }\n}));\n/**\n * Component to display the sections\n *\n * @param {Object} props\n */\n\nconst Section = props => {\n  const {\n    children,\n    fullWidth,\n    narrow,\n    disablePadding,\n    alternate,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"children\", \"fullWidth\", \"narrow\", \"disablePadding\", \"alternate\", \"className\"]);\n\n  const classes = useStyles();\n  return __jsx(\"section\", _extends({\n    className: clsx('section', classes.root, fullWidth ? classes.fullWidth : {}, narrow ? classes.narrow : {}, disablePadding ? classes.disablePadding : {}, alternate ? classes.alternate : {}, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }\n  }), children);\n};\n\nSection.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * Children to placed inside the section\n   */\n  children: PropTypes.node,\n\n  /**\n   * Should show narrow sections\n   */\n  narrow: PropTypes.bool,\n\n  /**\n   * Should the section be full width\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Should the section render with no padding\n   */\n  disablePadding: PropTypes.bool\n};\nexport default Section;","map":{"version":3,"sources":["/Users/kerimfathallah/Desktop/kode-klub/src/theme/Section/Section.js"],"names":["React","clsx","PropTypes","makeStyles","useStyles","theme","root","maxWidth","width","margin","padding","spacing","breakpoints","up","fullWidth","disablePadding","narrow","Section","props","children","alternate","className","rest","classes","propTypes","string","node","bool"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACxCC,EAAAA,IAAI,EAAE;AACLC,IAAAA,QAAQ,EAAE,IADL;AAELC,IAAAA,KAAK,EAAE,MAFF;AAGLC,IAAAA,MAAM,EAAE,QAHH;AAILC,IAAAA,OAAO,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd,EAAiB,CAAjB,CAJJ;AAKL,KAACN,KAAK,CAACO,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC7BH,MAAAA,OAAO,EAAEL,KAAK,CAACM,OAAN,CAAc,EAAd,EAAkB,CAAlB;AADoB;AALzB,GADkC;AAUxCG,EAAAA,SAAS,EAAE;AACVP,IAAAA,QAAQ,EAAE;AADA,GAV6B;AAaxCQ,EAAAA,cAAc,EAAE;AACfL,IAAAA,OAAO,EAAE;AADM,GAbwB;AAgBxCM,EAAAA,MAAM,EAAE;AACPT,IAAAA,QAAQ,EAAE;AADH;AAhBgC,CAAZ,CAAD,CAA5B;AAqBA;;;;;;AAKA,MAAMU,OAAO,GAAIC,KAAD,IAAW;AAC1B,QAAM;AACLC,IAAAA,QADK;AAELL,IAAAA,SAFK;AAGLE,IAAAA,MAHK;AAILD,IAAAA,cAJK;AAKLK,IAAAA,SALK;AAMLC,IAAAA;AANK,MAQFH,KARJ;AAAA,QAOII,IAPJ,4BAQIJ,KARJ;;AAUA,QAAMK,OAAO,GAAGnB,SAAS,EAAzB;AAEA,SACC;AACC,IAAA,SAAS,EAAEH,IAAI,CACd,SADc,EAEdsB,OAAO,CAACjB,IAFM,EAGdQ,SAAS,GAAGS,OAAO,CAACT,SAAX,GAAuB,EAHlB,EAIdE,MAAM,GAAGO,OAAO,CAACP,MAAX,GAAoB,EAJZ,EAKdD,cAAc,GAAGQ,OAAO,CAACR,cAAX,GAA4B,EAL5B,EAMdK,SAAS,GAAGG,OAAO,CAACH,SAAX,GAAuB,EANlB,EAOdC,SAPc;AADhB,KAUKC,IAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAWEH,QAXF,CADD;AAeA,CA5BD;;AA8BAF,OAAO,CAACO,SAAR,GAAoB;AACnB;;;AAGAH,EAAAA,SAAS,EAAEnB,SAAS,CAACuB,MAJF;;AAKnB;;;AAGAN,EAAAA,QAAQ,EAAEjB,SAAS,CAACwB,IARD;;AASnB;;;AAGAV,EAAAA,MAAM,EAAEd,SAAS,CAACyB,IAZC;;AAanB;;;AAGAb,EAAAA,SAAS,EAAEZ,SAAS,CAACyB,IAhBF;;AAiBnB;;;AAGAZ,EAAAA,cAAc,EAAEb,SAAS,CAACyB;AApBP,CAApB;AAuBA,eAAeV,OAAf","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tmaxWidth: 1200,\n\t\twidth: '100%',\n\t\tmargin: '0 auto',\n\t\tpadding: theme.spacing(6, 2),\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\tpadding: theme.spacing(12, 2)\n\t\t}\n\t},\n\tfullWidth: {\n\t\tmaxWidth: '100%'\n\t},\n\tdisablePadding: {\n\t\tpadding: 0\n\t},\n\tnarrow: {\n\t\tmaxWidth: 800\n\t}\n}));\n\n/**\n * Component to display the sections\n *\n * @param {Object} props\n */\nconst Section = (props) => {\n\tconst {\n\t\tchildren,\n\t\tfullWidth,\n\t\tnarrow,\n\t\tdisablePadding,\n\t\talternate,\n\t\tclassName,\n\t\t...rest\n\t} = props;\n\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<section\n\t\t\tclassName={clsx(\n\t\t\t\t'section',\n\t\t\t\tclasses.root,\n\t\t\t\tfullWidth ? classes.fullWidth : {},\n\t\t\t\tnarrow ? classes.narrow : {},\n\t\t\t\tdisablePadding ? classes.disablePadding : {},\n\t\t\t\talternate ? classes.alternate : {},\n\t\t\t\tclassName\n\t\t\t)}\n\t\t\t{...rest}>\n\t\t\t{children}\n\t\t</section>\n\t);\n};\n\nSection.propTypes = {\n\t/**\n\t * External classes\n\t */\n\tclassName: PropTypes.string,\n\t/**\n\t * Children to placed inside the section\n\t */\n\tchildren: PropTypes.node,\n\t/**\n\t * Should show narrow sections\n\t */\n\tnarrow: PropTypes.bool,\n\t/**\n\t * Should the section be full width\n\t */\n\tfullWidth: PropTypes.bool,\n\t/**\n\t * Should the section render with no padding\n\t */\n\tdisablePadding: PropTypes.bool\n};\n\nexport default Section;\n"]},"metadata":{},"sourceType":"module"}