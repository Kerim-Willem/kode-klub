{"ast":null,"code":"var _jsxFileName = \"/Users/kerimfathallah/Desktop/kode-klub/src/utils/TypedText/TypedText.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport Typed from 'react-typed';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {}\n}));\n\nconst TypedText = props => {\n  const {\n    className,\n    typedProps\n  } = props,\n        rest = _objectWithoutProperties(props, [\"className\", \"typedProps\"]);\n\n  const classes = useStyles();\n  return __jsx(Typography, _extends({\n    className: clsx('typed-text', classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }), __jsx(Typed, _extends({\n    className: \"typed-text__item\"\n  }, typedProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  })));\n};\n\nTypedText.propTypes = {\n  className: PropTypes.string,\n  typedProps: PropTypes.object.isRequired\n};\nexport default TypedText;","map":{"version":3,"sources":["/Users/kerimfathallah/Desktop/kode-klub/src/utils/TypedText/TypedText.js"],"names":["React","clsx","PropTypes","Typed","makeStyles","Typography","useStyles","theme","root","TypedText","props","className","typedProps","rest","classes","propTypes","string","object","isRequired"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAACG,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AAD+B,CAAL,CAAN,CAA5B;;AAKA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAqCF,KAA3C;AAAA,QAAkCG,IAAlC,4BAA2CH,KAA3C;;AAEA,QAAMI,OAAO,GAAGR,SAAS,EAAzB;AAEA,SACE,MAAC,UAAD;AACE,IAAA,SAAS,EAAEL,IAAI,CAAC,YAAD,EAAea,OAAO,CAACN,IAAvB,EAA6BG,SAA7B;AADjB,KAEME,IAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAIE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC;AAAjB,KAAwCD,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJF,CADF;AAQD,CAbD;;AAeAH,SAAS,CAACM,SAAV,GAAsB;AAEpBJ,EAAAA,SAAS,EAAET,SAAS,CAACc,MAFD;AAIpBJ,EAAAA,UAAU,EAAEV,SAAS,CAACe,MAAV,CAAiBC;AAJT,CAAtB;AAOA,eAAeT,SAAf","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport Typed from 'react-typed';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n}));\n\n\nconst TypedText = props => {\n  const { className, typedProps, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Typography\n      className={clsx('typed-text', classes.root, className)}\n      {...rest}\n    >\n      <Typed className=\"typed-text__item\" {...typedProps} />\n    </Typography>\n  );\n};\n\nTypedText.propTypes = {\n\n  className: PropTypes.string,\n\n  typedProps: PropTypes.object.isRequired,\n};\n\nexport default TypedText;\n"]},"metadata":{},"sourceType":"module"}