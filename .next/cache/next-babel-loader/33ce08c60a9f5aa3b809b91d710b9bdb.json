{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport { Box, Button, Link, Portal, Typography, makeStyles } from '@material-ui/core';\nimport { withTranslation } from '../i18n';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      backgroundColor: '#384047',\n      color: 'white',\n      maxWidth: 600,\n      position: 'fixed',\n      bottom: 0,\n      left: 0,\n      margin: theme.spacing(3),\n      padding: theme.spacing(3),\n      outline: 'none',\n      zIndex: 2000,\n      borderRadius: '10px'\n    },\n    action: {\n      backgroundColor: '#11c0c0',\n      color: 'white'\n    }\n  };\n});\n\nfunction CookiesNotification(_ref) {\n  var t = _ref.t;\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  var handleClose = function handleClose() {\n    Cookies.set('consent', 'true');\n    setOpen(false);\n  };\n\n  useEffect(function () {\n    var consent = Cookies.get('consent');\n\n    if (!consent) {\n      setOpen(true);\n    }\n  }, []);\n\n  if (!open) {\n    return null;\n  }\n\n  return __jsx(Portal, null, __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    color: \"inherit\"\n  }, t('text'), ' ', __jsx(Link, {\n    component: \"a\",\n    color: \"inherit\",\n    underline: \"always\",\n    href: \"https://devias.io/privacy-policy\",\n    target: \"_blank\"\n  }, t('privacy')), \".\"), __jsx(Box, {\n    mt: 2,\n    display: \"flex\",\n    justifyContent: \"flex-end\"\n  }, __jsx(Button, {\n    onClick: handleClose,\n    variant: \"contained\",\n    className: classes.action\n  }, t('button')))));\n}\n\nCookiesNotification.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", {\n            namespacesRequired: ['cookies']\n          });\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default withTranslation('cookies')(CookiesNotification);","map":null,"metadata":{},"sourceType":"module"}