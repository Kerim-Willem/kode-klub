{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SectionHeader from '../../utils/SectionHeader';\nimport Description from './Description';\nimport SectionAlternate from '../../theme/SectionAlternate';\nimport { withTranslation } from '../../i18n';\nconst useStyles = makeStyles(() => ({\n  root: {},\n  highlight: {\n    color: '#11c0c0'\n  }\n}));\n\nconst WhatWeDo = ({\n  t\n}, props) => {\n  const {\n    data,\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"data\", \"className\"]);\n\n  const classes = useStyles();\n  return __jsx(SectionAlternate, null, __jsx(\"div\", _extends({\n    className: clsx(classes.root, className)\n  }, rest), __jsx(SectionHeader, {\n    title: __jsx(\"span\", null, t('header'), ' ', __jsx(\"span\", {\n      className: classes.highlight\n    }, t('header2'), \" \")),\n    subtitle: t('subheader')\n  }), __jsx(Description, null)));\n};\n\nWhatWeDo.getInitialProps = async () => ({\n  namespacesRequired: ['whatwedo']\n});\n\nexport default withTranslation('whatwedo')(WhatWeDo);","map":null,"metadata":{},"sourceType":"module"}