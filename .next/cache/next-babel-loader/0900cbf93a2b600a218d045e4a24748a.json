{"ast":null,"code":"var _jsxFileName = \"/Users/kerimfathallah/Desktop/kode-klub/src/nav/Header.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Slide from '@material-ui/core/Slide';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Link from '../Link';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport ContactBarButton from '../components/ContactBarButton'; // import { LinkScroll, animateScroll as scroll } from 'react-scroll';\n\nimport { LinkScroll, animateScroll as scroll } from '../react-scroll';\nimport { withTranslation } from '../i18n';\n\nfunction HideOnScroll(props) {\n  const {\n    children\n  } = props;\n  const trigger = useScrollTrigger();\n  return __jsx(Slide, {\n    appear: false,\n    direction: \"down\",\n    in: !trigger,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 3\n    }\n  }, children);\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  toolbar: {\n    maxWidth: 1200,\n    width: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(0, 2)\n  },\n  toolbarMargin: _objectSpread(_objectSpread({}, theme.mixins.toolbar), {}, {\n    marginBottom: '3em'\n  }),\n  logo: {\n    marginLeft: '1rem',\n    maxWidth: '8rem'\n  },\n  logoContainer: {\n    padding: 0,\n    marginLeft: '1rem',\n    '&:hover': {\n      backgroundColor: 'transparent'\n    }\n  },\n  boxContainer: {\n    marginLeft: 'auto'\n  },\n  button: {\n    fontFamily: 'Roboto',\n    marginRight: '15px',\n    fontSize: '16px',\n    textTransform: 'none',\n    color: '#3D5865',\n    cursor: 'pointer',\n    fontWeight: '500',\n    minWidth: 5,\n    padding: '1rem',\n    '&:hover': {\n      backgroundColor: 'transparent',\n      textDecoration: 'none'\n    }\n  },\n  buttonContained: {\n    color: 'white',\n    marginLeft: '1rem',\n    marginRight: '1rem',\n    '&:hover': {\n      textDecoration: 'none'\n    }\n  },\n  buttonContainedList: {\n    color: 'white'\n  },\n  buttonMenu: {\n    paddingBottom: '10px'\n  },\n  menu: {\n    marginLeft: '55px',\n    marginTop: '50px',\n    borderRadius: '10px'\n  },\n  icon: {\n    height: '28px',\n    width: '28px'\n  },\n  drawerIcon: {\n    marginLeft: 'auto',\n    height: '30px',\n    width: '30px'\n  },\n  searchMobile: {\n    margin: 'auto'\n  },\n  searchDesktop: {\n    margin: 'auto',\n    width: '340px'\n  },\n  drawerIconContainer: {\n    marginLeft: 'auto',\n    '&:hover': {\n      backgroundColor: 'transparent'\n    }\n  },\n  appbar: {\n    zIndex: theme.zIndex.modal + 1,\n    backgroundColor: 'white'\n  }\n}));\n\nconst Header = ({\n  t\n}, props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const iOS = false && /iPad|iPhone|iPod/.test(navigator.userAgent);\n  const {\n    0: openDrawer,\n    1: setOpenDrawer\n  } = useState(false);\n  const matches = useMediaQuery(theme.breakpoints.down('md'));\n\n  const buttons = __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 3\n    }\n  }, __jsx(Box, {\n    className: classes.boxContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 4\n    }\n  }, __jsx(LinkScroll, {\n    className: classes.button,\n    activeClass: \"active\",\n    to: \"hero\",\n    spy: true,\n    smooth: true,\n    offset: 370,\n    duration: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, t('button1')), __jsx(LinkScroll, {\n    className: classes.button,\n    activeClass: \"active\",\n    to: \"hero\",\n    spy: true,\n    smooth: true,\n    offset: 900,\n    duration: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, t('button2'))), __jsx(ContactBarButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 4\n    }\n  }));\n\n  const drawer = __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 3\n    }\n  }, __jsx(SwipeableDrawer, {\n    disableBackdropTransition: !iOS,\n    disableDiscovery: iOS,\n    open: openDrawer,\n    onClose: () => setOpenDrawer(false),\n    onOpen: () => setOpenDrawer(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 4\n    }\n  }, __jsx(\"div\", {\n    className: classes.toolbarMargin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 5\n    }\n  }), __jsx(List, {\n    disablePadding: true,\n    className: classes.buttonMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }\n  }, __jsx(ListItem, {\n    button: true,\n    component: Link,\n    href: \"/messages\",\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 6\n    }\n  }, __jsx(LinkScroll, {\n    className: classes.button,\n    activeClass: \"active\",\n    to: \"hero\",\n    spy: true,\n    smooth: true,\n    offset: 350,\n    duration: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }, t('button1'))), __jsx(ListItem, {\n    button: true,\n    component: Link,\n    href: \"/notifications\",\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 6\n    }\n  }, __jsx(LinkScroll, {\n    className: classes.button,\n    activeClass: \"active\",\n    to: \"hero\",\n    spy: true,\n    smooth: true,\n    offset: 1320,\n    duration: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }, t('button2')))), __jsx(ContactBarButton, {\n    className: classes.containedMobile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 5\n    }\n  })), __jsx(IconButton, {\n    className: classes.drawerIconContainer,\n    onClick: () => setOpenDrawer(!openDrawer),\n    disableRipple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 4\n    }\n  }, __jsx(MenuIcon, {\n    className: classes.drawerIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 5\n    }\n  })));\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 3\n    }\n  }, __jsx(HideOnScroll, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 4\n    }\n  }, __jsx(AppBar, {\n    position: \"fixed\",\n    className: classes.appbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 5\n    }\n  }, __jsx(Toolbar, {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 6\n    }\n  }, __jsx(Button, {\n    component: Link,\n    href: \"/\",\n    className: classes.logoContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    alt: \"Mind Monks\",\n    className: classes.logo,\n    src: \"/assets/kodeklub.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 8\n    }\n  })), matches ? drawer : buttons))), __jsx(\"div\", {\n    className: classes.toolbarMargin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 4\n    }\n  }));\n};\n\nHeader.getInitialProps = async () => ({\n  namespacesRequired: ['header']\n});\n\nexport default withTranslation('header')(Header);","map":{"version":3,"sources":["/Users/kerimfathallah/Desktop/kode-klub/src/nav/Header.js"],"names":["React","useState","AppBar","Toolbar","useScrollTrigger","Slide","makeStyles","Box","Button","Link","useMediaQuery","useTheme","SwipeableDrawer","MenuIcon","List","ListItem","ListItemText","IconButton","ContactBarButton","LinkScroll","animateScroll","scroll","withTranslation","HideOnScroll","props","children","trigger","useStyles","theme","root","toolbar","maxWidth","width","margin","padding","spacing","toolbarMargin","mixins","marginBottom","logo","marginLeft","logoContainer","backgroundColor","boxContainer","button","fontFamily","marginRight","fontSize","textTransform","color","cursor","fontWeight","minWidth","textDecoration","buttonContained","buttonContainedList","buttonMenu","paddingBottom","menu","marginTop","borderRadius","icon","height","drawerIcon","searchMobile","searchDesktop","drawerIconContainer","appbar","zIndex","modal","Header","t","classes","iOS","test","navigator","userAgent","openDrawer","setOpenDrawer","matches","breakpoints","down","buttons","drawer","containedMobile","getInitialProps","namespacesRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Slide from '@material-ui/core/Slide';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Link from '../Link';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport ContactBarButton from '../components/ContactBarButton';\n// import { LinkScroll, animateScroll as scroll } from 'react-scroll';\nimport { LinkScroll, animateScroll as scroll } from '../react-scroll';\nimport { withTranslation } from '../i18n';\n\nfunction HideOnScroll(props) {\n\tconst { children } = props;\n\tconst trigger = useScrollTrigger();\n\n\treturn (\n\t\t<Slide appear={false} direction=\"down\" in={!trigger}>\n\t\t\t{children}\n\t\t</Slide>\n\t);\n}\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {},\n\ttoolbar: {\n\t\tmaxWidth: 1200,\n\t\twidth: '100%',\n\t\tmargin: '0 auto',\n\t\tpadding: theme.spacing(0, 2)\n\t},\n\ttoolbarMargin: {\n\t\t...theme.mixins.toolbar,\n\t\tmarginBottom: '3em'\n\t},\n\tlogo: {\n\t\tmarginLeft: '1rem',\n\t\tmaxWidth: '8rem'\n\t},\n\tlogoContainer: {\n\t\tpadding: 0,\n\t\tmarginLeft: '1rem',\n\t\t'&:hover': {\n\t\t\tbackgroundColor: 'transparent'\n\t\t}\n\t},\n\tboxContainer: {\n\t\tmarginLeft: 'auto'\n\t},\n\tbutton: {\n\t\tfontFamily: 'Roboto',\n\t\tmarginRight: '15px',\n\t\tfontSize: '16px',\n\t\ttextTransform: 'none',\n\t\tcolor: '#3D5865',\n\t\tcursor: 'pointer',\n\t\tfontWeight: '500',\n\t\tminWidth: 5,\n\t\tpadding: '1rem',\n\t\t'&:hover': {\n\t\t\tbackgroundColor: 'transparent',\n\t\t\ttextDecoration: 'none'\n\t\t}\n\t},\n\tbuttonContained: {\n\t\tcolor: 'white',\n\t\tmarginLeft: '1rem',\n\t\tmarginRight: '1rem',\n\t\t'&:hover': {\n\t\t\ttextDecoration: 'none'\n\t\t}\n\t},\n\tbuttonContainedList: {\n\t\tcolor: 'white'\n\t},\n\tbuttonMenu: {\n\t\tpaddingBottom: '10px'\n\t},\n\tmenu: {\n\t\tmarginLeft: '55px',\n\t\tmarginTop: '50px',\n\t\tborderRadius: '10px'\n\t},\n\ticon: {\n\t\theight: '28px',\n\t\twidth: '28px'\n\t},\n\tdrawerIcon: {\n\t\tmarginLeft: 'auto',\n\t\theight: '30px',\n\t\twidth: '30px'\n\t},\n\tsearchMobile: {\n\t\tmargin: 'auto'\n\t},\n\tsearchDesktop: {\n\t\tmargin: 'auto',\n\t\twidth: '340px'\n\t},\n\tdrawerIconContainer: {\n\t\tmarginLeft: 'auto',\n\t\t'&:hover': {\n\t\t\tbackgroundColor: 'transparent'\n\t\t}\n\t},\n\tappbar: {\n\t\tzIndex: theme.zIndex.modal + 1,\n\t\tbackgroundColor: 'white'\n\t}\n}));\n\nconst Header = ({ t }, props) => {\n\tconst classes = useStyles();\n\tconst theme = useTheme();\n\tconst iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n\n\tconst [openDrawer, setOpenDrawer] = useState(false);\n\tconst matches = useMediaQuery(theme.breakpoints.down('md'));\n\n\tconst buttons = (\n\t\t<React.Fragment>\n\t\t\t<Box className={classes.boxContainer}>\n\t\t\t\t<LinkScroll\n\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\tactiveClass=\"active\"\n\t\t\t\t\tto=\"hero\"\n\t\t\t\t\tspy={true}\n\t\t\t\t\tsmooth={true}\n\t\t\t\t\toffset={370}\n\t\t\t\t\tduration={500}>\n\t\t\t\t\t{t('button1')}\n\t\t\t\t</LinkScroll>\n\t\t\t\t<LinkScroll\n\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\tactiveClass=\"active\"\n\t\t\t\t\tto=\"hero\"\n\t\t\t\t\tspy={true}\n\t\t\t\t\tsmooth={true}\n\t\t\t\t\toffset={900}\n\t\t\t\t\tduration={500}>\n\t\t\t\t\t{t('button2')}\n\t\t\t\t</LinkScroll>\n\n\t\t\t\t{/* <Button\n\t\t\t\t\tclassName={classes.buttonContained}\n\t\t\t\t\tcomponent={Link}\n\t\t\t\t\thref=\"/create\"\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tonClick={handleBottombarOpen}>\n\t\t\t\t\tContact Us\n\t\t\t\t</Button> */}\n\t\t\t</Box>\n\t\t\t<ContactBarButton />\n\t\t</React.Fragment>\n\t);\n\n\tconst drawer = (\n\t\t<React.Fragment>\n\t\t\t<SwipeableDrawer\n\t\t\t\tdisableBackdropTransition={!iOS}\n\t\t\t\tdisableDiscovery={iOS}\n\t\t\t\topen={openDrawer}\n\t\t\t\tonClose={() => setOpenDrawer(false)}\n\t\t\t\tonOpen={() => setOpenDrawer(true)}>\n\t\t\t\t<div className={classes.toolbarMargin} />\n\t\t\t\t<List disablePadding className={classes.buttonMenu}>\n\t\t\t\t\t<ListItem button component={Link} href=\"/messages\" color=\"black\">\n\t\t\t\t\t\t<LinkScroll\n\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\tactiveClass=\"active\"\n\t\t\t\t\t\t\tto=\"hero\"\n\t\t\t\t\t\t\tspy={true}\n\t\t\t\t\t\t\tsmooth={true}\n\t\t\t\t\t\t\toffset={350}\n\t\t\t\t\t\t\tduration={500}>\n\t\t\t\t\t\t\t{t('button1')}\n\t\t\t\t\t\t</LinkScroll>\n\t\t\t\t\t</ListItem>\n\t\t\t\t\t<ListItem button component={Link} href=\"/notifications\" color=\"black\">\n\t\t\t\t\t\t<LinkScroll\n\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\tactiveClass=\"active\"\n\t\t\t\t\t\t\tto=\"hero\"\n\t\t\t\t\t\t\tspy={true}\n\t\t\t\t\t\t\tsmooth={true}\n\t\t\t\t\t\t\toffset={1320}\n\t\t\t\t\t\t\tduration={500}>\n\t\t\t\t\t\t\t{t('button2')}\n\t\t\t\t\t\t</LinkScroll>\n\t\t\t\t\t</ListItem>\n\n\t\t\t\t\t{/* <Button\n\t\t\t\t\t\tclassName={classes.buttonContained}\n\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\thref=\"/create\"\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"secondary\">\n\t\t\t\t\t\tContact Us\n\t\t\t\t\t</Button> */}\n\t\t\t\t</List>\n\t\t\t\t<ContactBarButton className={classes.containedMobile} />\n\t\t\t</SwipeableDrawer>\n\t\t\t<IconButton\n\t\t\t\tclassName={classes.drawerIconContainer}\n\t\t\t\tonClick={() => setOpenDrawer(!openDrawer)}\n\t\t\t\tdisableRipple>\n\t\t\t\t<MenuIcon className={classes.drawerIcon} />\n\t\t\t</IconButton>\n\t\t</React.Fragment>\n\t);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<HideOnScroll>\n\t\t\t\t<AppBar position=\"fixed\" className={classes.appbar}>\n\t\t\t\t\t<Toolbar className={classes.toolbar}>\n\t\t\t\t\t\t<Button component={Link} href=\"/\" className={classes.logoContainer}>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\talt=\"Mind Monks\"\n\t\t\t\t\t\t\t\tclassName={classes.logo}\n\t\t\t\t\t\t\t\tsrc=\"/assets/kodeklub.svg\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t{matches ? drawer : buttons}\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t</HideOnScroll>\n\t\t\t<div className={classes.toolbarMargin} />\n\t\t</React.Fragment>\n\t);\n};\n\nHeader.getInitialProps = async () => ({\n\tnamespacesRequired: ['header']\n});\n\nexport default withTranslation('header')(Header);\n"]},"metadata":{},"sourceType":"module"}