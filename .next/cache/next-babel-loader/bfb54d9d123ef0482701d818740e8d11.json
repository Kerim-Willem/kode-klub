{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid, Button, TextField } from '@material-ui/core';\nimport validate from 'validate.js';\nimport { withTranslation } from '../../i18n';\nimport Router from 'next/router';\nimport axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  }\n}));\nconst schema = {\n  fullname: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    length: {\n      maximum: 128\n    }\n  },\n  email: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    email: true,\n    length: {\n      maximum: 300\n    }\n  },\n  message: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    }\n  }\n};\n\nconst ContactForm = ({\n  t\n}) => {\n  const classes = useStyles();\n  const [formState, setFormState] = React.useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  React.useEffect(() => {\n    const errors = validate(formState.values, schema);\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n    setFormState(formState => _objectSpread(_objectSpread({}, formState), {}, {\n      values: _objectSpread(_objectSpread({}, formState.values), {}, {\n        [event.target.name]: event.target.type === 'checkbox' ? event.target.checked : event.target.value\n      }),\n      touched: _objectSpread(_objectSpread({}, formState.touched), {}, {\n        [event.target.name]: true\n      })\n    }));\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    console.log(formState.values);\n    const {\n      fullname,\n      email,\n      message\n    } = formState.values;\n    axios.post('/sendmail', {\n      fullname,\n      email,\n      message\n    }).then(response => {\n      console.log(response);\n      Router.push('/');\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const hasError = field => formState.touched[field] && formState.errors[field] ? true : false;\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(\"form\", {\n    onSubmit: submitHandler\n  }, __jsx(\"input\", {\n    type: \"hidden\",\n    name: \"form-name\"\n  }), __jsx(Grid, {\n    container: true,\n    spacing: 2\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Typography, {\n    variant: \"h4\",\n    align: \"center\"\n  }, __jsx(\"strong\", null, t('contact'))), __jsx(Typography, {\n    variant: \"h6\",\n    color: \"textSecondary\",\n    align: \"center\"\n  }, t('subheader'))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6\n  }, __jsx(TextField, {\n    placeholder: t('name'),\n    color: \"secondary\",\n    label: t('name'),\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"fullname\",\n    fullWidth: true,\n    helperText: hasError('fullname') ? formState.errors.fullname[0] : null,\n    error: hasError('fullname'),\n    onChange: handleChange,\n    type: \"text\",\n    value: formState.values.fullname || ''\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6\n  }, __jsx(TextField, {\n    placeholder: t('email'),\n    color: \"secondary\",\n    label: t('email'),\n    variant: \"outlined\",\n    size: \"medium\",\n    name: \"email\",\n    fullWidth: true,\n    helperText: hasError('email') ? formState.errors.email[0] : null,\n    error: hasError('email'),\n    onChange: handleChange,\n    type: \"email\",\n    value: formState.values.email || ''\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(TextField, {\n    placeholder: t('message'),\n    color: \"secondary\",\n    label: t('message'),\n    variant: \"outlined\",\n    name: \"message\",\n    fullWidth: true,\n    helperText: hasError('message') ? formState.errors.message[0] : null,\n    error: hasError('message'),\n    onChange: handleChange,\n    multiline: true,\n    rows: 4,\n    value: formState.values.message || ''\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Typography, {\n    variant: \"subtitle2\",\n    gutterBottom: true\n  }, t('fields')), __jsx(Button, {\n    size: \"large\",\n    variant: \"contained\",\n    type: \"submit\",\n    color: \"secondary\",\n    disabled: !formState.isValid\n  }, t('send'))))));\n};\n\nContactForm.getInitialProps = async () => ({\n  namespacesRequired: ['contactform']\n});\n\nexport default withTranslation('contactform')(ContactForm);","map":{"version":3,"sources":["/Users/kerimfathallah/Desktop/kode-klub/src/components/ContactForm/ContactForm.js"],"names":["React","makeStyles","Typography","Grid","Button","TextField","validate","withTranslation","Router","axios","useStyles","theme","root","width","schema","fullname","presence","allowEmpty","message","length","maximum","email","ContactForm","t","classes","formState","setFormState","useState","isValid","values","touched","errors","useEffect","handleChange","event","persist","target","name","type","checked","value","submitHandler","preventDefault","console","log","post","then","response","push","catch","error","hasError","field","getInitialProps","namespacesRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid, Button, TextField } from '@material-ui/core';\nimport validate from 'validate.js';\nimport { withTranslation } from '../../i18n';\nimport Router from 'next/router'\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%'\n\t}\n}));\n\nconst schema = {\n\tfullname: {\n\t\tpresence: { allowEmpty: false, message: 'is required' },\n\t\tlength: {\n\t\t\tmaximum: 128\n\t\t}\n\t},\n\temail: {\n\t\tpresence: { allowEmpty: false, message: 'is required' },\n\t\temail: true,\n\t\tlength: {\n\t\t\tmaximum: 300\n\t\t}\n\t},\n\tmessage: {\n\t\tpresence: { allowEmpty: false, message: 'is required' }\n\t}\n};\n\n\nconst ContactForm = ({ t }) => {\n\tconst classes = useStyles();\n\n\tconst [formState, setFormState] = React.useState({\n\t\tisValid: false,\n\t\tvalues: {},\n\t\ttouched: {},\n\t\terrors: {}\n\t});\n\n\tReact.useEffect(() => {\n\t\tconst errors = validate(formState.values, schema);\n\n\t\tsetFormState((formState) => ({\n\t\t\t...formState,\n\t\t\tisValid: errors ? false : true,\n\t\t\terrors: errors || {}\n\t\t}));\n\t}, [formState.values]);\n\n\tconst handleChange = (event) => {\n\t\tevent.persist();\n\n\t\tsetFormState((formState) => ({\n\t\t\t...formState,\n\t\t\tvalues: {\n\t\t\t\t...formState.values,\n\t\t\t\t[event.target.name]:\n\t\t\t\t\tevent.target.type === 'checkbox'\n\t\t\t\t\t\t? event.target.checked\n\t\t\t\t\t\t: event.target.value\n\t\t\t},\n\t\t\ttouched: {\n\t\t\t\t...formState.touched,\n\t\t\t\t[event.target.name]: true\n\t\t\t}\n\t\t}));\n\t};\n\n\tconst submitHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tconsole.log(formState.values);\n\n\t\tconst { fullname, email, message } = formState.values;\n\n\t\taxios\n\t\t\t.post('/sendmail', {\n\t\t\t\tfullname,\n\t\t\t\temail,\n\t\t\t\tmessage\n\t\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response);\n\t\t\t\tRouter.push('/')\n\t\t\t\t\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t\t\n\t\t\t\n\t};\n\n\tconst hasError = (field) =>\n\t\tformState.touched[field] && formState.errors[field] ? true : false;\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<form onSubmit={submitHandler} >\n\t\t\t\t<input type=\"hidden\" name=\"form-name\" />\n\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Typography variant=\"h4\" align=\"center\">\n\t\t\t\t\t\t\t<strong>{t('contact')}</strong>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant=\"h6\" color=\"textSecondary\" align=\"center\">\n\t\t\t\t\t\t\t{t('subheader')}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tplaceholder={t('name')}\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\tlabel={t('name')}\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\tname=\"fullname\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\thasError('fullname') ? formState.errors.fullname[0] : null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\terror={hasError('fullname')}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={formState.values.fullname || ''}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tplaceholder={t('email')}\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\tlabel={t('email')}\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\thelperText={hasError('email') ? formState.errors.email[0] : null}\n\t\t\t\t\t\t\terror={hasError('email')}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\tvalue={formState.values.email || ''}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tplaceholder={t('message')}\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\tlabel={t('message')}\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tname=\"message\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\thasError('message') ? formState.errors.message[0] : null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\terror={hasError('message')}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\trows={4}\n\t\t\t\t\t\t\tvalue={formState.values.message || ''}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Typography variant=\"subtitle2\" gutterBottom>\n\t\t\t\t\t\t\t{t('fields')}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\tdisabled={!formState.isValid}>\n\t\t\t\t\t\t\t{t('send')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nContactForm.getInitialProps = async () => ({\n\tnamespacesRequired: ['contactform']\n});\n\nexport default withTranslation('contactform')(ContactForm);\n"]},"metadata":{},"sourceType":"module"}