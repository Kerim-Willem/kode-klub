{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TypedText from '../../utils/TypedText';\nimport SectionHeader from '../../utils/SectionHeader';\nimport ContactBarButton from '../ContactBarButton';\nimport { withTranslation } from '../../i18n';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(6, 2),\n    [theme.breakpoints.up('sm')]: {\n      padding: theme.spacing(12, 1)\n    }\n  },\n  typed: {\n    fontWeight: 'bold'\n  }\n}));\n\nconst Hero = ({\n  t\n}, props) => {\n  const {\n    className\n  } = props,\n        rest = _objectWithoutProperties(props, [\"className\"]);\n\n  const classes = useStyles();\n  return __jsx(\"div\", _extends({\n    className: clsx(classes.root, className)\n  }, rest), __jsx(SectionHeader, {\n    id: \"hero\",\n    title: __jsx(React.Fragment, null, t('h1'), __jsx(\"br\", null), __jsx(TypedText, {\n      component: \"span\",\n      variant: \"h2\",\n      color: \"secondary\",\n      className: classes.typed,\n      typedProps: {\n        strings: ['Back-end', 'Front-end', 'UX/UI', 'Mobile', 'Marketing', 'Scrum', 'Django', 'React', 'Machine Learning', 'C', 'C++', 'Svelte', 'MySQL'],\n        typeSpeed: 50,\n        loop: true\n      }\n    })),\n    subtitle: t('subHeader'),\n    align: \"center\",\n    titleProps: {\n      variant: 'h2',\n      color: 'textPrimary'\n    },\n    subtitleProps: {\n      color: 'textPrimary',\n      variant: 'h5'\n    },\n    ctaGroup: [__jsx(ContactBarButton, null)],\n    disableGutter: true\n  }));\n};\n\nHero.getInitialProps = async () => ({\n  namespacesRequired: ['hero']\n});\n\nexport default withTranslation('hero')(Hero);","map":null,"metadata":{},"sourceType":"module"}